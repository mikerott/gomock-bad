// Code generated by MockGen. DO NOT EDIT.
// Source: ../interfaces/thingconsumer.go

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockThingConsumer is a mock of ThingConsumer interface
type MockThingConsumer struct {
	ctrl     *gomock.Controller
	recorder *MockThingConsumerMockRecorder
}

// MockThingConsumerMockRecorder is the mock recorder for MockThingConsumer
type MockThingConsumerMockRecorder struct {
	mock *MockThingConsumer
}

// NewMockThingConsumer creates a new mock instance
func NewMockThingConsumer(ctrl *gomock.Controller) *MockThingConsumer {
	mock := &MockThingConsumer{ctrl: ctrl}
	mock.recorder = &MockThingConsumerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockThingConsumer) EXPECT() *MockThingConsumerMockRecorder {
	return m.recorder
}

// ConsumeThings mocks base method
func (m *MockThingConsumer) ConsumeThings() ([]string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ConsumeThings")
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ConsumeThings indicates an expected call of ConsumeThings
func (mr *MockThingConsumerMockRecorder) ConsumeThings() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ConsumeThings", reflect.TypeOf((*MockThingConsumer)(nil).ConsumeThings))
}
